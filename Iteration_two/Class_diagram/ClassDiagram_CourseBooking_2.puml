@startuml
'https://plantuml.com/class-diagram

class ClassRoom {
+ location: str
+ classroom_id: float
+ type: list
+ max_capacity: int
+ faculty: list
+ building: int
+ level: int
+ view_classroom()
+ add_classroom ()
+ set_max_capacity()
+ set_type()
+ set_building()
+ set_location()
+ set-level()
}

class Instructor {
- title: str
- faculty: Faculty


}

class Student {
+ line_of_study: str
+ get_uni_mail()
+ get_schedule()

}

class Admin {
+ Department: str
+ add_course()
+ update_database()
+ assign_instructor()
}

class Employee {
- first_name: str
- last_name: str
- office_phone: str
- email: str
- cpr_number: str

+ set_first_name()
+ get_first_name()
+ set_first_name()
+ get_first_name()
+ set_office_phone()
+ get_office_phone()
+ set_email()
+ get_email()
+ set_cpr_number()
+ get_cpr_number()
}

enum faculty {
KU SUND
KU SCIENCE
DTU

}

enum CourseType {
Lecture
SAU
Lab

}

class CourseResponsible {
+ set_preference()
+ validate_schedule()
}

class User {
- uni_id: str
- password: str

+ set_uni_id()
+ get_uni_id()
+ set_password()
+ get_password()
}

class Observer {
+ update()
}

class Course {
+ course_id: str
+ name: str
+ course_ects: float
+ list_topic: list
+ responsible: CourseResponsible

}

class CourseGroup {
- group_id: str
- list_students: list
- course_type: CourseType

}

class Preference {
+ timeslot_preferred_start: list
+ timeslot_preferred_end: list
+ weekdays_preferred: list
+ location_type: list
+ list_requirements: list
}

User <|-- Student
User <|-- Employee

Employee <|-- Admin
Employee <|-- Instructor

Student "1" -- "1..*" Course: Attends >

Instructor "1" -- "1..*" Course: teaches >

CourseGroup "1" -- "1..*" Course: has <

CourseGroup "1" -- "1" CourseResponsible: has a >

CourseResponsible "1" -- "1" Preference: set >

Observer --> User
Preference - ClassRoom: Auto generates >


@enduml